class Solution:
    def snakesAndLadders(self, board: List[List[int]]) -> int:
        l=len(board)
        board.reverse()
        def itp(s):
            r=(s-1)//l
            c=(s-1)%l
            if r%2:
                c=l-1-c
            return [r,c]

        q=deque()
        q.append([1,0])
        v=set()
        while q:
            s,m=q.popleft()
            for i in range(1,7):
                ns=s+i
                r,c=itp(ns)
                if board[r][c]!=-1:
                    ns=board[r][c]
                if ns==l*l:
                    return m+1
                if ns not in v:
                    v.add(ns)
                    q.append([ns,m+1])
        return -1            
                            
        
