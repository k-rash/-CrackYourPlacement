"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution:
    def flatten(self, head: 'Optional[Node]') -> 'Optional[Node]':
        stack=[]
        beg=head
        while head:
            if head.child:
                if head.next:
                    stack.append(head.next)
                head.next=head.child
                head.next.prev=head
                head.child=None
            if len(stack)!=0 and head.next==None:
                head.next=stack.pop()
                head.next.prev=head
            head=head.next
        return beg        







        
