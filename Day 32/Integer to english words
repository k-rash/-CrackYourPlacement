class Solution:
    def numberToWords(self, num: int) -> str:
        if num==0:
            return "Zero"
        ones_maps={1:"One",2:"Two",3:"Three",4:"Four",5:"Five",6:"Six",7:"Seven",8:"Eight",9:"Nine",10:"Ten",
                11:"Eleven",12:"Twelve",13:"Thirteen",14:"Fourteen",15:"Fifteen",16:"Sixteen",17:"Seventeen",
                18:"Eighteen",19:"Nineteen",}
        tens_maps={20:"Twenty",30:"Thirty",40:"Forty",50:"Fifty",60:"Sixty",70:"Seventy",
                80:"Eighty",90:"Ninety",} 

        def get_three(d):
            res=[]
            hund=d//100
            if hund:
                res.append(ones_maps[hund] +" Hundred")
            last2=d%100
            if last2>=20:
                tens,ones=last2//10,last2%10 
                res.append(tens_maps[tens*10])
                if ones:
                    res.append(ones_maps[ones])
            elif last2:
                res.append(ones_maps[last2])
            return " ".join(res)                    

        postfix=[""," Thousand", " Million"," Billion"]
        i=0
        res=[]
        while num:
            digit=num%1000
            s=get_three(digit)
            if s:
                res.append(s+postfix[i])
            num=num//1000    
            i=i+1
        res.reverse()
        return " ".join(res)        
