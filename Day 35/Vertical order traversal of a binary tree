# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def verticalTraversal(self, root: Optional[TreeNode]) -> List[List[int]]:
        hdist,vdist=0,0
        val,res={},[]
        self.vert(root,hdist,vdist,val)
        for i in sorted(val.keys()):
            c=[j[1] for j in sorted(val[i])]
            res.append(c)
        return res    
    
    def vert(self,rt,hd,vd,vl):
        if not rt:
            return 
        if hd in vl:
            vl[hd].append((vd,rt.val))
        else:
            vl[hd]=[(vd,rt.val)] 
        self.vert(rt.left,hd-1,vd+1,vl)
        self.vert(rt.right,hd+1,vd+1,vl)           
