class NumArray:

    def __init__(self, nums: List[int]):
        self.n=len(nums)
        self.nums=nums
        self.tree=[0]*(self.n+1)
        for i,n in enumerate(nums):
            self.updatetree(i+1,n)

    def updatetree(self,i,val):
        while i<=self.n:
            self.tree[i]+=val
            i+=i&-i

    def getsum(self,i):
        ans=0
        while i>0:
            ans+=self.tree[i]
            i-=i&-i
        return ans                    

    def update(self, index: int, val: int) -> None:
        dif =val-self.nums[index]
        self.nums[index]=val
        self.updatetree(index+1,dif)  

    def sumRange(self, left: int, right: int) -> int:
        return self.getsum(right+1)-self.getsum(left)
        


# Your NumArray object will be instantiated and called as such:
# obj = NumArray(nums)
# obj.update(index,val)
# param_2 = obj.sumRange(left,right)
