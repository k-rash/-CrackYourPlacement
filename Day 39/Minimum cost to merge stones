class Solution:
    def mergeStones(self, stones: List[int], k: int) -> int:
        n = len(stones)
        if (n - 1) % (k - 1):
            return -1
        pre = [0] * (n + 1)
        for i in range(n):
            pre[i + 1] = pre[i] + stones[i]
        @lru_cache(None)
        def dp(i, j):
            if j - i + 1 < k:
                return 0
            ans = min(dp(i, mid) + dp(mid + 1, j) for mid in range(i, j, k - 1))
            if (j - i) % (k - 1) == 0:
                ans += pre[j + 1] - pre[i]
            return ans
        return dp(0, n - 1)
        
