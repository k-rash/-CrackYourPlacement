class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        if endWord not in wordList:
            return 0
        dictt=collections.defaultdict(list)    
        wordList.append(endWord)
        for i in wordList:
            for j in range(len(i)):
                pat=i[:j]+"*"+i[j+1:] 
                dictt[pat].append(i) 

        v=set([beginWord])
        q=deque([beginWord])
        ans=1
        while q:
            for i in range(len(q)):
                w=q.popleft()
                if w==endWord:
                    return ans
                for j in range(len(w)):
                    pat=w[:j]+"*"+w[j+1:]  
                    for n in dictt[pat]:
                        if n not in v:
                            v.add(n)
                            q.append(n)
            ans+=1
        return 0                               


        
