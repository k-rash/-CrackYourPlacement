class Solution:
    def largestIsland(self, grid: List[List[int]]) -> int:
        def find(u):
            if u==par[u]:
                return u
            else:
                par[u]=find(par[u])
                return par[u]
        def union(u,v):
            pu,pv=find(u),find(v)
            if pu==pv:
                return 
            if size[pv]>size[pu]:
                par[pu]=pv
                size[pv]+=size[pu]
            else:
                par[pv]=pu
                size[pu]+=size[pv]
        
        n=len(grid)
        par=[i for i in range(n*n)]
        size=[1 for i in range(n*n)]
        for i in range(n):
            for j in range(n):
                if grid[i][j]:
                    a=i*n+j
                    for u,v in [(i-1,j),(i+1,j),(i,j-1),(i,j+1)]:
                        if 0<=u<n and 0<=v<n and grid[u][v]:
                            b=u*n+v
                            union(a,b)
        m=0 
        for i in range(n):
            for j in range(n):
                if grid[i][j]==0:
                    t=set()
                    c=1
                    for u,v in [(i-1,j),(i+1,j),(i,j-1),(i,j+1)]:
                        if 0<=u<n and 0<=v<n and grid[u][v]:
                            a=u*n+v
                            t.add(find(a))
                    for x in t:
                        c+=size[x]
                    if c>m:
                        m=c
        for i in range(n*n):
            m=max(m,size[find(i)])
        return m
       
